Sure, here are 40 commonly used Git commands that you may find useful:

git init: Initialize a new Git repository.
git clone [url]: Clone a repository from a URL.
git add [file]: Add a file to the staging area.
git add .: Add all changes to the staging area.
git commit -m "[message]": Commit changes with a message.
git status: Check the status of the working directory and staging area.
git diff: Show the changes between commits, commit and working tree, etc.
git log: Show the commit logs.
git branch: List all local branches in the current repository.
git branch [branch_name]: Create a new branch.
git checkout [branch_name]: Switch to a different branch.
git checkout -b [branch_name]: Create and switch to a new branch.
git merge [branch_name]: Merge a branch into the current branch.
git remote: List remote repositories.
git remote -v: List remote repositories with URLs.
git remote add [name] [url]: Add a new remote repository.
git pull [remote] [branch]: Fetch changes from a remote repository and merge them into the current branch.
git push [remote] [branch]: Push local changes to a remote repository.
git fetch [remote]: Download objects and refs from another repository.
git reset [file]: Unstage changes for a specific file.
git reset --hard: Reset the index and working tree.
git rm [file]: Remove a file from the working directory and staging area.
git mv [file_from] [file_to]: Move or rename a file.
git tag: List all tags in the repository.
git tag [tag_name]: Create a new tag.
git show [tag_name]: Show the details of a tag.
git fetch --tags: Fetch all tags from the remote repository.
git cherry-pick [commit]: Apply the changes introduced by the given commit.
git stash: Stash changes in the working directory.
git stash list: List all stashed changes.
git stash apply: Apply the most recent stash.
git stash apply [stash_id]: Apply a specific stash.
git stash pop: Apply the most recent stash and remove it from the stash list.
git stash drop: Remove the most recent stash from the stash list.
git config: Get and set repository or global options.
git config --global [option]: Set a global configuration option.
git config --global user.name "[name]": Set the name for commits.
git config --global user.email "[email]": Set the email for commits.
git grep [pattern]: Search the working directory for a pattern.
git bisect: Use binary search to find the commit that introduced a bug.
